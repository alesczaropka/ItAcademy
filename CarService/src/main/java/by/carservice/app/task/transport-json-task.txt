Контрольная задача:

Автосервис.
Контекст задачи:
	В городе есть автодиагностический сервис, в котором производится диагностика колесного транспорта. Возможна диагностика следующих типов транспорта: автомобиль, микроавтобус, мотоцикл. В зависимости от типа транспорта меняется стоимость диагностики: мотоцикл 10 рублей, автомобиль 20 рублей, микроавтобус - 30 рублей.

Задача:
	В файле, который хранится на компьютере, содержится список транспорта, которой необходимо продиагностировать. Название файла transport.json. Информация хранится в формате 
<тип транспорта>, <модель>
где:
- <тип транспорта> - только одно значение из: автомобиль, микроавтобус, мотоцикл
- <модель> - модель транспорта, может содержать только буквы, цифры, пробелы и дефис, модель может начинаться только с символа, а заканчиваться цифрой или символом, на пример BMW W7.

Его содержание:
Начало файла: (данная строка не входит в файл)
[
  {
    "type": "мотоцикл",
    "model": "Ninja ZX-14"
  },
  {
    "type": "автомобиль",
    "model": "Audi Q7"
  },
  {
    "type": "автомобиль",
    "model": "Audi Q9!№"
  },
  {
    "type": "микроавтобус",
    "model": "Sprinter264"
  },
  {
    "type": "микроавтобус",
    "model": "Transporter T5"
  },
  {
    "type": "автомобиль",
    "model": "BMW M5"
  },
  {
    "type": "автомобиль",
    "model": "Mazda CX7"
  },
  {
    "type": "мотоцикл",
    "model": "Ninja **"
  }
]
Конец файла. (данная строка не входит в файл)

Необходимо:
1. Прочитать файл со списком транспорта, выделить корректные записи, которые соответствуют условиям указания <тип транспорта>, <модель> в файле
2. Некорректные записи транспорта, записать в файл invalid-transport.json в том же виде, в котором они были в transport.json (порядок записи значения не имеет).
3. Продиагностировать транспорт, который был выделен из корректных строк transport.json. 4. Результат диагностики для продиагностированного транспорта записать в файл processed-transport.json в формате JSON.
	4.1 Формат файла:
	Начало файла: (данная строка не входит в файл)
[
  {
    "type": "мотоцикл",
    "model": "Ninja ZX-14",
    "price": 10
  },
  {
    "type": "автомобиль",
    "model": "Audi Q7",
    "price": 20
  },
  {
    "type": "микроавтобус",
    "model": "Sprinter264",
    "price": 30
  },
  {
    "type": "микроавтобус",
    "model": "Transporter T5",
    "price": 30
  },
  {
    "type": "автомобиль",
    "model": "BMW M5",
    "price": 20
  },
  {
    "type": "автомобиль",
    "model": "Mazda CX7",
    "price": 20
  }
]
	
	Конец файла. (данная строка не входит в файл)
	где:
	- <цена> - цена диагностики  в зависимости от типа транспорта - 10, 20 , 30
	4.2 Запись осуществлять в отсортированном порядке по одному или нескольким полям. Т.е. Может быть сортировка только по цене, или по типу транспорта и модели ил все поля вместе взятые в любом варианте. Варианты сортировок и их порядок по возрастанию/убыванию вводится с консоли. Пользователь не может ввести две одинаковые сортировки, т.е к примеру: по цене по возрастанию и по цене по убыванию. В таком случае пользователя нужно известить, что такой вариант сортировки есть.
	4.3 После успешной записи вывести в консоль полный путь к файлу.

5. Для преобразования JSON в POJO использовать библиотеку org.json
6. Проект может состоять из двух модулей (или более), например core и Application

Рекомендации: 
1. Именование классов, переменных, методов, пакетов и т.п. должны соответствовать общепринятым правилам.
2. Провести декомпозицию - выделить основные объекты, а также их свойства и действия.
3. Логика должна быть структурирована, т.е для ее реализации использовать классы (в том числе абстрактные, если надо), интерфейсы, enum.
4. Логика должна учитывать ошибки, которые могут возникнуть при работе, если они фатальные - завершить программу, если нет (к примеру некорректный ввод данных) - повторить попытку.
5. При написании нужно пользоваться всем пройденным материалом: потоки, семафоры, паттерны для строк, работа с фалами и консолью, и т.п.
6. Выбирать необходимые модификаторы доступа - public, private и т.п.
7. Выводить информационные сообщения в консоль по мере необходимости и логического смысла (каждое действие комментировать не надо).
8. Допускается перевод русских слов на английские аналоги, например мотоцикл - motorbike.

После завершения, результат прислать на почту siarhei.dubina@gmail.com или Telegramm @quant_sd в виде архива zip без сжатия.